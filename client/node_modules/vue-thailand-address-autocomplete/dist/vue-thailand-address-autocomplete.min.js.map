{"version":3,"file":"vue-thailand-address-autocomplete.min.js","sources":["../node_modules/thai-address-database/lib/util/splitAddress.js"],"sourcesContent":["'use strict';\n\nvar lib = require('../index.js');\n\nexports.prepareAddress = function (address, zip) {\n  address = address.replace(zip, '');\n  address = address.replace('Thailand', '');\n  address = address.replace('ต.', '');\n  address = address.replace('อ.', '');\n  address = address.replace('จ.', '');\n  address = address.replace('ตำบล', '');\n  address = address.replace('อำเภอ', '');\n  address = address.replace('จังหวัด', '');\n  address = address.replace('แขวง', '');\n  address = address.replace('เขต', '');\n  address = address.replace('แขวง.', '');\n  address = address.replace('เขต.', '');\n  address = address.replace(' กทม. ', ' กรุงเทพมหานคร ');\n  address = address.replace(' กทม ', ' กรุงเทพมหานคร ');\n  address = address.replace(' กรุงเทพ ', ' กรุงเทพมหานคร ');\n  return address;\n};\n\nexports.getBestResult = function (zip, address) {\n  var searchResult = lib.searchAddressByZipcode(zip);\n  searchResult.forEach(function (element, index) {\n    var district = address.indexOf(element.district);\n    var next = district !== -1 ? district + 1 : 0;\n    var amphoe = address.indexOf(element.amphoe, next);\n    next = amphoe !== -1 ? amphoe + 1 : next + 1;\n    var province = address.indexOf(element.province, next);\n    var point = [district, amphoe, province].filter(function (el) {\n      return el >= 0;\n    }).length;\n    searchResult[index].point = point;\n  });\n  searchResult.sort(function (a, b) {\n    return b.point - a.point;\n  });\n  if (searchResult && searchResult[0] && searchResult[0].point === 3) {\n    return searchResult[0];\n  } else {\n    return null;\n  }\n};\n\nexports.cleanupAddress = function (address, result) {\n  var regexDistrict = new RegExp('\\\\s' + result.district, 'g');\n  var findDistrict = regexDistrict.exec(address);\n  if (findDistrict) {\n    address = address.replace(findDistrict[0], '');\n  }\n  var regexAmphoe = new RegExp('\\\\s' + result.amphoe + '|\\u0E40\\u0E21\\u0E37\\u0E2D\\u0E07', 'g');\n  var findAmphoe = regexAmphoe.exec(address);\n  if (findAmphoe) {\n    address = address.replace(findAmphoe[0], '');\n  }\n  var regexProvince = new RegExp('\\\\s' + result.province, 'g');\n  var findProvince = regexProvince.exec(address);\n  if (findProvince) {\n    address = address.replace(findProvince[0], '');\n  }\n  address = address.trim();\n  return address;\n};"],"names":["address","zip","replace","searchResult","lib","searchAddressByZipcode","forEach","element","index","district","indexOf","next","amphoe","point","province","filter","el","length","sort","a","b","result","findDistrict","RegExp","exec","findAmphoe","findProvince","trim"],"mappings":";;;;;oZAIA,wBAAyB,SAAUA,EAASC,GAgB1C,OADAD,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,EAAUA,EAAQE,QAAQD,EAAK,KACbC,QAAQ,WAAY,KACpBA,QAAQ,KAAM,KACdA,QAAQ,KAAM,KACdA,QAAQ,KAAM,KACdA,QAAQ,OAAQ,KAChBA,QAAQ,QAAS,KACjBA,QAAQ,UAAW,KACnBA,QAAQ,OAAQ,KAChBA,QAAQ,MAAO,KACfA,QAAQ,QAAS,KACjBA,QAAQ,OAAQ,KAChBA,QAAQ,SAAU,oBAClBA,QAAQ,QAAS,oBACjBA,QAAQ,YAAa,kCAIjB,SAAUD,EAAKD,GACrC,IAAIG,EAAeC,EAAIC,uBAAuBJ,GAe9C,OAdAE,EAAaG,QAAQ,SAAUC,EAASC,GACtC,IAAIC,EAAWT,EAAQU,QAAQH,EAAQE,UACnCE,GAAqB,IAAdF,EAAkBA,EAAW,EAAI,EACxCG,EAASZ,EAAQU,QAAQH,EAAQK,OAAQD,GAC7CA,GAAmB,IAAZC,EAAgBA,EAAS,EAAID,EAAO,EAC3C,IACIE,EAAQ,CAACJ,EAAUG,EADRZ,EAAQU,QAAQH,EAAQO,SAAUH,IACRI,OAAO,SAAUC,GACxD,OAAOA,GAAM,IACZC,OACHd,EAAaK,GAAOK,MAAQA,IAE9BV,EAAae,KAAK,SAAUC,EAAGC,GAC7B,OAAOA,EAAEP,MAAQM,EAAEN,QAEjBV,GAAgBA,EAAa,IAAgC,IAA1BA,EAAa,GAAGU,MAC9CV,EAAa,GAEb,qBAIc,SAAUH,EAASqB,GAC1C,IACIC,EADgB,IAAIC,OAAO,MAAQF,EAAOZ,SAAU,KACvBe,KAAKxB,GAClCsB,IACFtB,EAAUA,EAAQE,QAAQoB,EAAa,GAAI,KAE7C,IACIG,EADc,IAAIF,OAAO,MAAQF,EAAOT,OAAS,SAAmC,KAC3DY,KAAKxB,GAC9ByB,IACFzB,EAAUA,EAAQE,QAAQuB,EAAW,GAAI,KAE3C,IACIC,EADgB,IAAIH,OAAO,MAAQF,EAAOP,SAAU,KACvBU,KAAKxB,GAKtC,OAJI0B,IACF1B,EAAUA,EAAQE,QAAQwB,EAAa,GAAI,KAE7C1B,EAAUA,EAAQ2B"}