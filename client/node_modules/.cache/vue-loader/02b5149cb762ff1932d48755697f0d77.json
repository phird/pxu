{"remainingRequest":"D:\\GitHub\\pxu-web\\client\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\GitHub\\pxu-web\\client\\src\\views\\Summernote.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\GitHub\\pxu-web\\client\\src\\views\\Summernote.vue","mtime":1652322870590},{"path":"D:\\GitHub\\pxu-web\\client\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651634972765},{"path":"D:\\GitHub\\pxu-web\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1651453997873},{"path":"D:\\GitHub\\pxu-web\\client\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651634972757},{"path":"D:\\GitHub\\pxu-web\\client\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1651635696127}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOw0KaW1wb3J0ICJxdWlsbC9kaXN0L3F1aWxsLmNvcmUuY3NzIjsNCmltcG9ydCAicXVpbGwvZGlzdC9xdWlsbC5zbm93LmNzcyI7DQppbXBvcnQgeyBxdWlsbEVkaXRvciwgUXVpbGwgfSBmcm9tICJ2dWUtcXVpbGwtZWRpdG9yIjsNCmltcG9ydCB7IEltYWdlRXh0ZW5kIH0gZnJvbSAicXVpbGwtaW1hZ2UtZXh0ZW5kLW1vZHVsZSI7DQppbXBvcnQgSW1hZ2VFZGl0IGZyb20gInF1aWxsLWltYWdlLWVkaXQtbW9kdWxlIjsNClF1aWxsLnJlZ2lzdGVyKCJtb2R1bGVzL2ltYWdlRWRpdCIsIEltYWdlRWRpdCk7DQovLyBpbXBvcnQgSW1hZ2VSZXNpemUgZnJvbSAncXVpbGwtaW1hZ2UtcmVzaXplLW1vZHVsZSc7DQpjb25zdCBzaXplU3R5bGUgPSBRdWlsbC5pbXBvcnQoImF0dHJpYnV0b3JzL3N0eWxlL3NpemUiKTsNCi8vIFF1aWxsLnJlZ2lzdGVyKCdtb2R1bGVzL0ltYWdlUmVzaXplJywgSW1hZ2VSZXNpemUpDQpzaXplU3R5bGUud2hpdGVsaXN0ID0gWw0KICAiMTBweCIsDQogICIxMnB4IiwNCiAgIjE0cHgiLA0KICAiMTZweCIsDQogICIxOHB4IiwNCiAgIjIwcHgiLA0KICAiMjRweCIsDQogICIzMHB4IiwNCiAgIjMycHgiLA0KICAiMzZweCIsDQpdOw0KUXVpbGwucmVnaXN0ZXIoc2l6ZVN0eWxlLCB0cnVlKTsNClF1aWxsLnJlZ2lzdGVyKCJtb2R1bGVzL0ltYWdlRXh0ZW5kIiwgSW1hZ2VFeHRlbmQpOw0KZnVuY3Rpb24gZ2V0Rm9udE5hbWUoZm9udCkgew0KICByZXR1cm4gZm9udC50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoL1xzL2csICItIik7DQp9DQovLyBTcGVjaWZ5IFF1aWxsIGZvbnRzDQpjb25zdCBmb250TGlzdCA9IFsNCiAgIkFyaWFsIiwNCiAgIkNvdXJpZXIiLA0KICAiR2FyYW1vbmQiLA0KICAiS2FuaXQiLA0KICAiT3JiaXRyb24iLA0KICAiU3Jpc2FrZGkiLA0KXTsNCmNvbnN0IGZvbnROYW1lcyA9IGZvbnRMaXN0Lm1hcCgoZm9udCkgPT4gZ2V0Rm9udE5hbWUoZm9udCkpOw0KY29uc3QgZm9udHMgPSBRdWlsbC5pbXBvcnQoImZvcm1hdHMvZm9udCIpOw0KZm9udHMud2hpdGVsaXN0ID0gZm9udE5hbWVzOw0KUXVpbGwucmVnaXN0ZXIoZm9udHMsIHRydWUpOw0KLy8gQWRkIGZvbnRzIHRvIENTUyBzdHlsZQ0KbGV0IGZvbnRTdHlsZXMgPSAiIjsNCmZvbnRMaXN0LmZvckVhY2goZnVuY3Rpb24gKGZvbnQpIHsNCiAgbGV0IGZvbnROYW1lID0gZ2V0Rm9udE5hbWUoZm9udCk7DQogIGZvbnRTdHlsZXMgKz0NCiAgICAiLnFsLXNub3cgLnFsLXBpY2tlci5xbC1mb250IC5xbC1waWNrZXItbGFiZWxbZGF0YS12YWx1ZT0iICsNCiAgICBmb250TmFtZSArDQogICAgIl06OmJlZm9yZSwgLnFsLXNub3cgLnFsLXBpY2tlci5xbC1mb250IC5xbC1waWNrZXItaXRlbVtkYXRhLXZhbHVlPSIgKw0KICAgIGZvbnROYW1lICsNCiAgICAiXTo6YmVmb3JlIHsiICsNCiAgICAiY29udGVudDogJyIgKw0KICAgIGZvbnQgKw0KICAgICInOyIgKw0KICAgICJmb250LWZhbWlseTogJyIgKw0KICAgIGZvbnQgKw0KICAgICInLCBzYW5zLXNlcmlmOyIgKw0KICAgICJ9IiArDQogICAgIi5xbC1mb250LSIgKw0KICAgIGZvbnROYW1lICsNCiAgICAieyIgKw0KICAgICIgZm9udC1mYW1pbHk6ICciICsNCiAgICBmb250ICsNCiAgICAiJywgc2Fucy1zZXJpZjsiICsNCiAgICAifSI7DQp9KTsNCmNvbnN0IG5vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzdHlsZSIpOw0Kbm9kZS5pbm5lckhUTUwgPSBmb250U3R5bGVzOw0KZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChub2RlKTsNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogIlN1bW1lcm5vdGUiLA0KICBjb21wb25lbnRzOiB7DQogICAgcXVpbGxFZGl0b3IsDQogIH0sDQogIHByb3BzOlsic3Vtbm90ZSJdLA0KICAvLyAgIGNyZWF0ZWQoKSB7DQogIC8vICAgICAvLyB0aGlzLmdldHN1bSgpOw0KICAvLyAgIH0sDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGNvbnRlbnQ6ICIiLA0KICAgICAgZWRpdG9yT3B0aW9uOiB7DQogICAgICAgIHBsYWNlaG9sZGVyOiAidHlwZSBzb21ldGhpbmcuLi4iLA0KICAgICAgICBtb2R1bGVzOiB7DQogICAgICAgICAgaW1hZ2VFZGl0OiB7DQogICAgICAgICAgICBtb2R1bGVzOiBbIlJlc2l6ZSIsICJEaXNwbGF5U2l6ZSIsICJEZWxldGUiXSwNCiAgICAgICAgICB9LA0KICAgICAgICAgIC8vIHNlZTogaHR0cHM6Ly9naXRodWIuY29tL05leHRCb3kvcXVpbGwtaW1hZ2UtZXh0ZW5kLW1vZHVsZSNxdWlsbC1pbWFnZS1leHRlbmQtbW9kdWxlLSVFNyU5QSU4NCVFNiU4OSU4MCVFNiU5QyU4OSVFNSU4RiVBRiVFOSU4NSU4RCVFNyVCRCVBRSVFOSVBMSVCOQ0KICAgICAgICAgIEltYWdlRXh0ZW5kOiB7DQogICAgICAgICAgICBsb2FkaW5nOiB0cnVlLA0KICAgICAgICAgICAgbmFtZTogImltZyIsDQogICAgICAgICAgICBhY3Rpb246ICIvdXBsb2FkcyIsDQogICAgICAgICAgICAvLyDlj6/pgInlj4LmlbAg6K6+572u6K+35rGC5aS06YOoDQogICAgICAgICAgICBoZWFkZXJzOiAoeGhyKSA9PiB7DQogICAgICAgICAgICAgIHhoci5zZXRSZXF1ZXN0SGVhZGVyKCJ3aXRoQ3JlZGVudGlhbHMiLCB0cnVlKTsNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICByZXNwb25zZTogKHJlcykgPT4gew0KICAgICAgICAgICAgICByZXR1cm4gcmVzLmluZm87DQogICAgICAgICAgICB9LA0KICAgICAgICAgIH0sDQogICAgICAgICAgLy8gc2VlOiBodHRwczovL3F1aWxsanMuY29tL2RvY3MvbW9kdWxlcy90b29sYmFyLw0KICAgICAgICAgIHRvb2xiYXI6IHsNCiAgICAgICAgICAgIGNvbnRhaW5lcjogWw0KICAgICAgICAgICAgICBbDQogICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgc2l6ZTogWw0KICAgICAgICAgICAgICAgICAgICAiMTBweCIsDQogICAgICAgICAgICAgICAgICAgICIxMnB4IiwNCiAgICAgICAgICAgICAgICAgICAgIjE0cHgiLA0KICAgICAgICAgICAgICAgICAgICAiMTZweCIsDQogICAgICAgICAgICAgICAgICAgICIxOHB4IiwNCiAgICAgICAgICAgICAgICAgICAgIjIwcHgiLA0KICAgICAgICAgICAgICAgICAgICAiMjRweCIsDQogICAgICAgICAgICAgICAgICAgICIzMHB4IiwNCiAgICAgICAgICAgICAgICAgICAgIjMycHgiLA0KICAgICAgICAgICAgICAgICAgICAiMzZweCIsDQogICAgICAgICAgICAgICAgICBdLA0KICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgICAgeyBoZWFkZXI6IFsxLCAyLCAzLCA0LCA1LCA2LCBmYWxzZV0gfSwNCiAgICAgICAgICAgICAgXSwNCiAgICAgICAgICAgICAgWw0KICAgICAgICAgICAgICAgICJib2xkIiwNCiAgICAgICAgICAgICAgICAiaXRhbGljIiwNCiAgICAgICAgICAgICAgICAidW5kZXJsaW5lIiwNCiAgICAgICAgICAgICAgICAic3RyaWtlIiwNCiAgICAgICAgICAgICAgICB7IGNvbG9yOiBbXSB9LA0KICAgICAgICAgICAgICAgIHsgYmFja2dyb3VuZDogW10gfSwNCiAgICAgICAgICAgICAgXSwNCiAgICAgICAgICAgICAgWw0KICAgICAgICAgICAgICAgIHsgbGlzdDogIm9yZGVyZWQiIH0sDQogICAgICAgICAgICAgICAgeyBsaXN0OiAiYnVsbGV0IiB9LA0KICAgICAgICAgICAgICAgIHsgaW5kZW50OiAiLTEiIH0sDQogICAgICAgICAgICAgICAgeyBpbmRlbnQ6ICIrMSIgfSwNCiAgICAgICAgICAgICAgXSwNCiAgICAgICAgICAgICAgWyJsaW5rIiwgImltYWdlIl0sDQogICAgICAgICAgICAgIFsiY2xlYW4iXSwNCiAgICAgICAgICAgICAgW3sgZm9udDogZm9udHMud2hpdGVsaXN0IH1dLA0KICAgICAgICAgICAgXSwNCiAgICAgICAgICAgIGhhbmRsZXJzOiB7DQogICAgICAgICAgICAgIC8vIGltYWdlOiBmdW5jdGlvbigpIHsNCiAgICAgICAgICAgICAgLy8gICBRdWlsbFdhdGNoLmVtaXQodGhpcy5xdWlsbC5pZCk7DQogICAgICAgICAgICAgIC8vIH0NCiAgICAgICAgICAgIH0sDQogICAgICAgICAgfSwNCiAgICAgICAgfSwNCiAgICAgIH0sDQogICAgICBvbkVkaXRvckJsdXIoKSB7fSwNCiAgICAgIG9uRWRpdG9yRm9jdXMoKSB7fSwNCiAgICAgIG9uRWRpdG9yUmVhZHkoKSB7fSwNCiAgICB9Ow0KICB9LA0KICBjb21wdXRlZDogew0KICAgIGVkaXRvcigpIHsNCiAgICAgIHJldHVybiB0aGlzLiRyZWZzLm15UXVpbGxFZGl0b3I7DQogICAgfSwNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIGFkZHRleHQoKSB7DQogICAgICBsZXQgbXl0ZXh0ID0gdGhpcy5zdW1ub3RlOw0KICAgICAgdGhpcy4kZW1pdCgidXBkYXRlLXRleHQiLCBteXRleHQpOw0KICAgIH0sDQogIH0sDQp9Ow0K"},{"version":3,"sources":["Summernote.vue"],"names":[],"mappingsfile":"Summernote.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"hello\">\r\n    <div>\r\n      <quill-editor\r\n        v-model=\"sumnote\"\r\n        ref=\"myQuillEditor\"\r\n        :options=\"editorOption\"\r\n        @change=\"addtext\"\r\n        @blur=\"onEditorBlur($event)\"\r\n        @focus=\"onEditorFocus($event)\"\r\n        @ready=\"onEditorReady($event)\"\r\n      >\r\n      </quill-editor>\r\n    </div>\r\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\r\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\r\n    <link\r\n      href=\"https://fonts.googleapis.com/css2?family=Srisakdi:wght@400;700&display=swap\"\r\n      rel=\"stylesheet\"\r\n    />\r\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\r\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\r\n    <link\r\n      href=\"https://fonts.googleapis.com/css2?family=Orbitron:wght@400;900&display=swap\"\r\n      rel=\"stylesheet\"\r\n    />\r\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\r\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\r\n    <link\r\n      href=\"https://fonts.googleapis.com/css2?family=Square+Peg&display=swap\"\r\n      rel=\"stylesheet\"\r\n    />\r\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\r\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\r\n    <link\r\n      href=\"https://fonts.googleapis.com/css2?family=Kanit:ital,wght@0,300;0,600;1,300;1,600&display=swap\"\r\n      rel=\"stylesheet\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport \"quill/dist/quill.core.css\";\r\nimport \"quill/dist/quill.snow.css\";\r\nimport { quillEditor, Quill } from \"vue-quill-editor\";\r\nimport { ImageExtend } from \"quill-image-extend-module\";\r\nimport ImageEdit from \"quill-image-edit-module\";\r\nQuill.register(\"modules/imageEdit\", ImageEdit);\r\n// import ImageResize from 'quill-image-resize-module';\r\nconst sizeStyle = Quill.import(\"attributors/style/size\");\r\n// Quill.register('modules/ImageResize', ImageResize)\r\nsizeStyle.whitelist = [\r\n  \"10px\",\r\n  \"12px\",\r\n  \"14px\",\r\n  \"16px\",\r\n  \"18px\",\r\n  \"20px\",\r\n  \"24px\",\r\n  \"30px\",\r\n  \"32px\",\r\n  \"36px\",\r\n];\r\nQuill.register(sizeStyle, true);\r\nQuill.register(\"modules/ImageExtend\", ImageExtend);\r\nfunction getFontName(font) {\r\n  return font.toLowerCase().replace(/\\s/g, \"-\");\r\n}\r\n// Specify Quill fonts\r\nconst fontList = [\r\n  \"Arial\",\r\n  \"Courier\",\r\n  \"Garamond\",\r\n  \"Kanit\",\r\n  \"Orbitron\",\r\n  \"Srisakdi\",\r\n];\r\nconst fontNames = fontList.map((font) => getFontName(font));\r\nconst fonts = Quill.import(\"formats/font\");\r\nfonts.whitelist = fontNames;\r\nQuill.register(fonts, true);\r\n// Add fonts to CSS style\r\nlet fontStyles = \"\";\r\nfontList.forEach(function (font) {\r\n  let fontName = getFontName(font);\r\n  fontStyles +=\r\n    \".ql-snow .ql-picker.ql-font .ql-picker-label[data-value=\" +\r\n    fontName +\r\n    \"]::before, .ql-snow .ql-picker.ql-font .ql-picker-item[data-value=\" +\r\n    fontName +\r\n    \"]::before {\" +\r\n    \"content: '\" +\r\n    font +\r\n    \"';\" +\r\n    \"font-family: '\" +\r\n    font +\r\n    \"', sans-serif;\" +\r\n    \"}\" +\r\n    \".ql-font-\" +\r\n    fontName +\r\n    \"{\" +\r\n    \" font-family: '\" +\r\n    font +\r\n    \"', sans-serif;\" +\r\n    \"}\";\r\n});\r\nconst node = document.createElement(\"style\");\r\nnode.innerHTML = fontStyles;\r\ndocument.body.appendChild(node);\r\nexport default {\r\n  name: \"Summernote\",\r\n  components: {\r\n    quillEditor,\r\n  },\r\n  props:[\"sumnote\"],\r\n  //   created() {\r\n  //     // this.getsum();\r\n  //   },\r\n  data() {\r\n    return {\r\n      content: \"\",\r\n      editorOption: {\r\n        placeholder: \"type something...\",\r\n        modules: {\r\n          imageEdit: {\r\n            modules: [\"Resize\", \"DisplaySize\", \"Delete\"],\r\n          },\r\n          // see: https://github.com/NextBoy/quill-image-extend-module#quill-image-extend-module-%E7%9A%84%E6%89%80%E6%9C%89%E5%8F%AF%E9%85%8D%E7%BD%AE%E9%A1%B9\r\n          ImageExtend: {\r\n            loading: true,\r\n            name: \"img\",\r\n            action: \"/uploads\",\r\n            // 可选参数 设置请求头部\r\n            headers: (xhr) => {\r\n              xhr.setRequestHeader(\"withCredentials\", true);\r\n            },\r\n            response: (res) => {\r\n              return res.info;\r\n            },\r\n          },\r\n          // see: https://quilljs.com/docs/modules/toolbar/\r\n          toolbar: {\r\n            container: [\r\n              [\r\n                {\r\n                  size: [\r\n                    \"10px\",\r\n                    \"12px\",\r\n                    \"14px\",\r\n                    \"16px\",\r\n                    \"18px\",\r\n                    \"20px\",\r\n                    \"24px\",\r\n                    \"30px\",\r\n                    \"32px\",\r\n                    \"36px\",\r\n                  ],\r\n                },\r\n                { header: [1, 2, 3, 4, 5, 6, false] },\r\n              ],\r\n              [\r\n                \"bold\",\r\n                \"italic\",\r\n                \"underline\",\r\n                \"strike\",\r\n                { color: [] },\r\n                { background: [] },\r\n              ],\r\n              [\r\n                { list: \"ordered\" },\r\n                { list: \"bullet\" },\r\n                { indent: \"-1\" },\r\n                { indent: \"+1\" },\r\n              ],\r\n              [\"link\", \"image\"],\r\n              [\"clean\"],\r\n              [{ font: fonts.whitelist }],\r\n            ],\r\n            handlers: {\r\n              // image: function() {\r\n              //   QuillWatch.emit(this.quill.id);\r\n              // }\r\n            },\r\n          },\r\n        },\r\n      },\r\n      onEditorBlur() {},\r\n      onEditorFocus() {},\r\n      onEditorReady() {},\r\n    };\r\n  },\r\n  computed: {\r\n    editor() {\r\n      return this.$refs.myQuillEditor;\r\n    },\r\n  },\r\n  methods: {\r\n    addtext() {\r\n      let mytext = this.sumnote;\r\n      this.$emit(\"update-text\", mytext);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\nh3 {\r\n  margin: 40px 0 0;\r\n}\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\nli {\r\n  display: inline-block;\r\n  margin: 0 10px;\r\n}\r\na {\r\n  color: #42b983;\r\n}\r\n</style>\r\n\r\n<style>\r\n.ql-size span.ql-picker-item[data-value]::before,\r\n.ql-size span.ql-picker-label[data-value]::before {\r\n  content: attr(data-value) !important;\r\n}\r\n</style>"]}]}