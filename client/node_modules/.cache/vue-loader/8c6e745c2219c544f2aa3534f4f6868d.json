{"remainingRequest":"D:\\GitHub\\pxu-web\\client\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\GitHub\\pxu-web\\client\\src\\views\\Createbank.vue?vue&type=style&index=0&id=06cc9ef2&scoped=true&lang=css&","dependencies":[{"path":"D:\\GitHub\\pxu-web\\client\\src\\views\\Createbank.vue","mtime":1651820265978},{"path":"D:\\GitHub\\pxu-web\\client\\node_modules\\css-loader\\dist\\cjs.js","mtime":1651454024138},{"path":"D:\\GitHub\\pxu-web\\client\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1651635696316},{"path":"D:\\GitHub\\pxu-web\\client\\node_modules\\postcss-loader\\src\\index.js","mtime":1651454063870},{"path":"D:\\GitHub\\pxu-web\\client\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651634972757},{"path":"D:\\GitHub\\pxu-web\\client\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1651635696127}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi51cGxvYWRpbmctaW1hZ2Ugew0KICBkaXNwbGF5OiBmbGV4Ow0KfQ0KLmZpZWxkIHsNCiAgbWFyZ2luLWJvdHRvbTogMjRweDsNCn0NCg0KLmZpZWxkID4gbGFiZWwgew0KICBtYXJnaW4tcmlnaHQ6IDhweDsNCn0NCg0KLmVycm9yIHsNCiAgY29sb3I6IHJlZDsNCn0NCg=="},{"version":3,"sources":["Createbank.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqHA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"Createbank.vue","sourceRoot":"src/views","sourcesContent":["\r\n<template>\r\n  <div>\r\n    <form @submit.prevent=\"submitForm()\">\r\n      <div class=\"field\">\r\n        <label for=\"bankAccount\"> เลขธนาคาร</label>\r\n        <input id=\"bankAccount\" type=\"text\" v-model=\"bankAccount\" />\r\n        <div class=\"error\" v-if=\"$v.bankAccount.$error\">\r\n          <template v-if=\"!$v.bankAccount.$invalid\"> </template>\r\n          <template v-else> เบอร์บริษัทต้องมี10หลัก </template>\r\n        </div>\r\n      </div>\r\n      <div class=\"field\">\r\n        <label for=\"bankName\"> ชื่อธนาคาร</label>\r\n        <input id=\"bankName\" type=\"text\" v-model=\"bankName\" />\r\n        <div class=\"error\" v-if=\"$v.bankName.$error\">\r\n          <template v-if=\"!$v.bankName.$invalid\"> </template>\r\n          <template v-else> ต้องระบุชื่อ </template>\r\n        </div>\r\n      </div>\r\n      <div class=\"field\">\r\n        <label for=\"accountName\"> accountName</label>\r\n        <input id=\"accountName\" type=\"text\" v-model=\"accountName\" />\r\n        <div class=\"error\" v-if=\"$v.accountName.$error\">\r\n          <template v-if=\"!$v.accountName.$invalid\"> </template>\r\n          <template v-else> email error </template>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <a-checkbox @change=\"changestatus()\"> Set Default </a-checkbox>\r\n      </div>\r\n      <div>\r\n        <input type=\"file\" @change=\"uploadFile\" />\r\n      </div>\r\n\r\n      <button type=\"submit\">ส่งแบบฟอร์ม</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  required,\r\n  minLength,\r\n  maxLength,\r\n  alpha,\r\n  integer,\r\n} from \"vuelidate/lib/validators\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      bankName: \"\",\r\n      bankAccount: \"\",\r\n      accountName: null,\r\n      status: \"-\",\r\n      file: [],\r\n    };\r\n  },\r\n\r\n  validations: {\r\n    bankAccount: {\r\n      required,\r\n      integer,\r\n      minLength: minLength(10),\r\n      maxLength: maxLength(12),\r\n    },\r\n    accountName: {\r\n      required,\r\n    },\r\n    bankName: {\r\n      required,\r\n    },\r\n    // passportDate: {\r\n    //   required,\r\n    //   validDate: (val) => moment(val, \"DD.MM.YYYY\", true).isValid(),\r\n    // },\r\n  },\r\n  methods: {\r\n    async submitForm() {\r\n      this.$v.$touch();\r\n      const formdata = new FormData();\r\n      formdata.append(\"file\", this.file);\r\n      if (this.$v.$invalid) {\r\n        alert(\"can't submit\");\r\n      } else {\r\n        await axios.post('http://localhost:5000/upload', formdata, {\r\n          }).then((res) => {\r\n              axios\r\n              .post(\"http://localhost:5000/bank\", {\r\n                bankName: this.bankName,\r\n                bankAccount: this.bankAccount,\r\n                accountName: this.accountName,\r\n                status: this.status,\r\n                img: this.file.name,\r\n              }).then(\r\n                alert('ok')\r\n              )\r\n          })\r\n      \r\n    \r\n          \r\n      }\r\n    },\r\n    changestatus() {\r\n      this.status = \"default\";\r\n    },\r\n    uploadFile(event){\r\n      this.file = event.target.files[0]\r\n      console.log(this.file.name);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.uploading-image {\r\n  display: flex;\r\n}\r\n.field {\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.field > label {\r\n  margin-right: 8px;\r\n}\r\n\r\n.error {\r\n  color: red;\r\n}\r\n</style>"]}]}