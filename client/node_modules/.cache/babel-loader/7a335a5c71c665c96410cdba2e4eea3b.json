{"remainingRequest":"D:\\GitHub\\pxu-web\\client\\node_modules\\babel-loader\\lib\\index.js!D:\\GitHub\\pxu-web\\client\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\GitHub\\pxu-web\\client\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\GitHub\\pxu-web\\client\\src\\views\\PDF\\createPDFscope.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\GitHub\\pxu-web\\client\\src\\views\\PDF\\createPDFscope.vue","mtime":1653541092508},{"path":"D:\\GitHub\\pxu-web\\client\\babel.config.js","mtime":1651452852000},{"path":"D:\\GitHub\\pxu-web\\client\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651634972765},{"path":"D:\\GitHub\\pxu-web\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1651453997873},{"path":"D:\\GitHub\\pxu-web\\client\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651634972757},{"path":"D:\\GitHub\\pxu-web\\client\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1651635696127}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkQ6L0dpdEh1Yi9weHUtd2ViL2NsaWVudC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBwZGZNYWtlIGZyb20gInBkZm1ha2UiOwppbXBvcnQgcGRmRm9udHMgZnJvbSAiLi4vLi4vYXNzZXRzL2N1c3RvbS1mb250cy5qcyI7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CnZhciBUZXh0aW1nID0gIiI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiQXBwIiwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2NJRDogIiIsCiAgICAgIHNjb3BlQXJyOiBbXSwKICAgICAgaHRtbFRleHQ6ICIiCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuc2NJRCA9IHRoaXMuJHJvdXRlLnBhcmFtcy5pZDsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHRoaXMuZ2V0QmFzZTY0RnJvbVVybCgiaHR0cHM6Ly9weHUtc2VydmVyLmhlcm9rdWFwcC5jb20vc3RhbXAvc3RhbXAucG5nIikudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICBUZXh0aW1nID0gZGF0YTsKICAgIH0pOwogICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgIF90aGlzLmV4cG9ydCgpOwogICAgfSwgNTAwKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldEJhc2U2NEZyb21Vcmw6IGZ1bmN0aW9uIGdldEJhc2U2NEZyb21VcmwodXJsKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIGRhdGEsIGJsb2I7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gZmV0Y2godXJsKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgZGF0YSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBkYXRhLmJsb2IoKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgYmxvYiA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gNjsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICAgICAgICAgICAgICAgIHZhciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpOwogICAgICAgICAgICAgICAgICByZWFkZXIucmVhZEFzRGF0YVVSTChibG9iKTsKCiAgICAgICAgICAgICAgICAgIHJlYWRlci5vbmxvYWRlbmQgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIGJhc2U2NGRhdGEgPSByZWFkZXIucmVzdWx0OwogICAgICAgICAgICAgICAgICAgIHJlc29sdmUoYmFzZTY0ZGF0YSk7CiAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICB9KSk7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTA7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDYpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQudDApOwoKICAgICAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1s2LCAxMF1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZXhwb3J0OiBmdW5jdGlvbiBfZXhwb3J0KCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciByZXNwb25zZSwgdmFsLCBkZDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX3RoaXMyLnNjSUQgPSBfdGhpczIuJHJvdXRlLnBhcmFtcy5pZDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiBheGlvcy5nZXQoImh0dHBzOi8vcHh1LXNlcnZlci5oZXJva3VhcHAuY29tL3F1b3RhdGlvbi9xdW9TY29wZS8iLmNvbmNhdChfdGhpczIuc2NJRCkpOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgX3RoaXMyLnNjb3BlQXJyID0gcmVzcG9uc2UuZGF0YVswXTsKICAgICAgICAgICAgICAgIC8qIGNvbnNvbGUubG9nKCJyZXNwb25zZS5kYXRhWzBdIik7ICovCgogICAgICAgICAgICAgICAgLyogY29uc29sZS5sb2codGhpcy5zY29wZUFycik7ICovCgogICAgICAgICAgICAgICAgX3RoaXMyLmh0bWxUZXh0ID0gX3RoaXMyLnNjb3BlQXJyLnN1bW1lcm5vdGU7CiAgICAgICAgICAgICAgICAvKiBjb25zb2xlLmxvZyhodG1sVGV4dCk7ICovCgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxMjsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDk7CiAgICAgICAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbImNhdGNoIl0oMSk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dDIudDApOwoKICAgICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgICAgcGRmTWFrZS52ZnMgPSBwZGZGb250cy5wZGZNYWtlLnZmczsKICAgICAgICAgICAgICAgIHZhbCA9IGh0bWxUb1BkZm1ha2UoX3RoaXMyLmh0bWxUZXh0KTsKICAgICAgICAgICAgICAgIGRkID0gewogICAgICAgICAgICAgICAgICBwYWdlU2l6ZTogIkE0IiwKICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogW3sKICAgICAgICAgICAgICAgICAgICBpbWFnZTogInN0YW1wIiwKICAgICAgICAgICAgICAgICAgICB3aWR0aDogIjU1MCIsCiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMC4xLAogICAgICAgICAgICAgICAgICAgIGFic29sdXRlUG9zaXRpb246IHsKICAgICAgICAgICAgICAgICAgICAgIHg6IDIwLAogICAgICAgICAgICAgICAgICAgICAgeTogMTUwCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9XSwKICAgICAgICAgICAgICAgICAgY29udGVudDogW3ZhbF0sCiAgICAgICAgICAgICAgICAgIGltYWdlczogewogICAgICAgICAgICAgICAgICAgIHN0YW1wOiBUZXh0aW1nCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICBwZGZNYWtlLmNyZWF0ZVBkZihkZCkub3Blbih7fSwgd2luZG93KTsKCiAgICAgICAgICAgICAgY2FzZSAxNjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMiwgbnVsbCwgW1sxLCA5XV0pOwogICAgICB9KSkoKTsKICAgIH0KICB9Cn07"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;AAEA;AACAA,aADA;AAEAC,MAFA,kBAEA;AACA;AACAC,cADA;AAEAC,kBAFA;AAGAC;AAHA;AAKA,GARA;AASAC,SATA,qBASA;AACA;AACA,GAXA;AAaAC,SAbA,qBAaA;AAAA;;AACA,mFACA;AAEAC;AAEA,KALA;AAOAC;AAAA;AAAA;AACA,GAtBA;AAuBAC;AACAC,oBADA,4BACAC,GADA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACAC,UADA;;AAAA;AACAX,oBADA;AAAA;AAAA,uBAEAA,WAFA;;AAAA;AAEAY,oBAFA;AAAA;AAAA,iDAIA;AACA;AACAC;;AACAA;AACA;AACAC;AACA,mBAHA;AAIA,iBAPA,CAJA;;AAAA;AAAA;AAAA;AAaAC;;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA,KAhBA;AAiBAC,UAjBA,qBAiBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA,uBAGAC,wEACA,WADA,EAHA;;AAAA;AAGAC,wBAHA;AAMA;AACA;;AACA;;AACA;AACA;;AAVA;AAAA;;AAAA;AAAA;AAAA;AAYAH;;AAZA;AAcAI;AACAC,mBAfA,GAeAC,8BAfA;AAkBAC,kBAlBA,GAkBA;AACAC,gCADA;AAEAC,+BACA;AACAC,kCADA;AAEAC,gCAFA;AAGAC,gCAHA;AAIAC;AAAAC;AAAAC;AAAA;AAJA,mBADA,CAFA;AAUAC,gCAVA;AAWAC;AACAC;AADA;AAXA,iBAlBA;AAiCAd;;AAjCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkCA;AAnDA;AAvBA","names":["name","data","scID","scopeArr","htmlText","created","mounted","Textimg","setTimeout","methods","getBase64FromUrl","url","fetch","blob","reader","resolve","console","export","axios","response","pdfMake","val","htmlToPdfmake","dd","pageSize","background","image","width","opacity","absolutePosition","x","y","content","images","stamp"],"sourceRoot":"src/views/PDF","sources":["createPDFscope.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <div\r\n      style=\"\r\n        display: flex;\r\n        font-size: 40px;\r\n        text-align: center;\r\n        justify-content: center;\r\n      \">\r\n      LOADING ....\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport pdfMake from \"pdfmake\";\r\nimport pdfFonts from \"../../assets/custom-fonts.js\";\r\nimport axios from \"axios\";\r\nlet Textimg = \"\";\r\n\r\nexport default {\r\n  name: \"App\",\r\n  data() {\r\n    return {\r\n      scID: \"\",\r\n      scopeArr: [],\r\n      htmlText: \"\",\r\n    };\r\n  },\r\n  created() {\r\n    this.scID = this.$route.params.id;\r\n  },\r\n\r\n  mounted() {\r\n    this.getBase64FromUrl(\"https://pxu-server.herokuapp.com/stamp/stamp.png\").then(\r\n        function (data) {\r\n\r\n            Textimg = data;\r\n\r\n        }\r\n        );\r\n    setTimeout(()=>{this.export()},500)\r\n  },\r\n  methods: {\r\n    async getBase64FromUrl(url) {\r\n      const data = await fetch(url);\r\n      const blob = await data.blob();\r\n      try {\r\n        return new Promise((resolve) => {\r\n          const reader = new FileReader();\r\n          reader.readAsDataURL(blob);\r\n          reader.onloadend = () => {\r\n            const base64data = reader.result;\r\n            resolve(base64data);\r\n          }\r\n        });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n    async export() {\r\n      this.scID = this.$route.params.id;\r\n      try {\r\n        const response = await axios.get(\r\n          `https://pxu-server.herokuapp.com/quotation/quoScope/${this.scID}`\r\n        );\r\n        this.scopeArr = response.data[0];\r\n        /* console.log(\"response.data[0]\"); */\r\n        /* console.log(this.scopeArr); */\r\n        this.htmlText = this.scopeArr.summernote;\r\n        /* console.log(htmlText); */\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n      pdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n      var val = htmlToPdfmake(this.htmlText);\r\n\r\n\r\n      const dd = {\r\n        pageSize: \"A4\",\r\n        background: [\r\n          {\r\n            image: \"stamp\",\r\n            width: \"550\",\r\n            opacity: 0.1,\r\n            absolutePosition: { x: 20, y: 150 },\r\n          },\r\n        ],\r\n        content: [val],\r\n        images: {\r\n          stamp: Textimg,\r\n        },\r\n      };\r\n      pdfMake.createPdf(dd).open({}, window);\r\n    },\r\n        \r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n</style>"]}]}