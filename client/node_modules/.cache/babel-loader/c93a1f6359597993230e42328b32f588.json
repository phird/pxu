{"remainingRequest":"D:\\GitHub\\pxu-web\\client\\node_modules\\babel-loader\\lib\\index.js!D:\\GitHub\\pxu-web\\client\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\GitHub\\pxu-web\\client\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\GitHub\\pxu-web\\client\\src\\views\\Summernote.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\GitHub\\pxu-web\\client\\src\\views\\Summernote.vue","mtime":1653541092556},{"path":"D:\\GitHub\\pxu-web\\client\\babel.config.js","mtime":1651452852000},{"path":"D:\\GitHub\\pxu-web\\client\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651634972765},{"path":"D:\\GitHub\\pxu-web\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":1651453997873},{"path":"D:\\GitHub\\pxu-web\\client\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651634972757},{"path":"D:\\GitHub\\pxu-web\\client\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1651635696127}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwppbXBvcnQgInF1aWxsL2Rpc3QvcXVpbGwuY29yZS5jc3MiOwppbXBvcnQgInF1aWxsL2Rpc3QvcXVpbGwuc25vdy5jc3MiOwppbXBvcnQgeyBxdWlsbEVkaXRvciwgUXVpbGwgfSBmcm9tICJ2dWUtcXVpbGwtZWRpdG9yIjsKaW1wb3J0IHsgSW1hZ2VFeHRlbmQgfSBmcm9tICJxdWlsbC1pbWFnZS1leHRlbmQtbW9kdWxlIjsKaW1wb3J0IEltYWdlRWRpdCBmcm9tICJxdWlsbC1pbWFnZS1lZGl0LW1vZHVsZSI7ClF1aWxsLnJlZ2lzdGVyKCJtb2R1bGVzL2ltYWdlRWRpdCIsIEltYWdlRWRpdCk7IC8vIGltcG9ydCBJbWFnZVJlc2l6ZSBmcm9tICdxdWlsbC1pbWFnZS1yZXNpemUtbW9kdWxlJzsKCnZhciBzaXplU3R5bGUgPSBRdWlsbC5pbXBvcnQoImF0dHJpYnV0b3JzL3N0eWxlL3NpemUiKTsgLy8gUXVpbGwucmVnaXN0ZXIoJ21vZHVsZXMvSW1hZ2VSZXNpemUnLCBJbWFnZVJlc2l6ZSkKCnNpemVTdHlsZS53aGl0ZWxpc3QgPSBbIjEwcHgiLCAiMTJweCIsICIxNHB4IiwgIjE2cHgiLCAiMThweCIsICIyMHB4IiwgIjI0cHgiLCAiMzBweCIsICIzMnB4IiwgIjM2cHgiXTsKUXVpbGwucmVnaXN0ZXIoc2l6ZVN0eWxlLCB0cnVlKTsKUXVpbGwucmVnaXN0ZXIoIm1vZHVsZXMvSW1hZ2VFeHRlbmQiLCBJbWFnZUV4dGVuZCk7CgpmdW5jdGlvbiBnZXRGb250TmFtZShmb250KSB7CiAgcmV0dXJuIGZvbnQudG9Mb3dlckNhc2UoKS5yZXBsYWNlKC9ccy9nLCAiLSIpOwp9IC8vIFNwZWNpZnkgUXVpbGwgZm9udHMKCgp2YXIgZm9udExpc3QgPSBbIkFyaWFsIiwgIkthbml0Il07CnZhciBmb250TmFtZXMgPSBmb250TGlzdC5tYXAoZnVuY3Rpb24gKGZvbnQpIHsKICByZXR1cm4gZ2V0Rm9udE5hbWUoZm9udCk7Cn0pOwp2YXIgZm9udHMgPSBRdWlsbC5pbXBvcnQoImZvcm1hdHMvZm9udCIpOwpmb250cy53aGl0ZWxpc3QgPSBmb250TmFtZXM7ClF1aWxsLnJlZ2lzdGVyKGZvbnRzLCB0cnVlKTsgLy8gQWRkIGZvbnRzIHRvIENTUyBzdHlsZQoKdmFyIGZvbnRTdHlsZXMgPSAiIjsKZm9udExpc3QuZm9yRWFjaChmdW5jdGlvbiAoZm9udCkgewogIHZhciBmb250TmFtZSA9IGdldEZvbnROYW1lKGZvbnQpOwogIGZvbnRTdHlsZXMgKz0gIi5xbC1zbm93IC5xbC1waWNrZXIucWwtZm9udCAucWwtcGlja2VyLWxhYmVsW2RhdGEtdmFsdWU9IiArIGZvbnROYW1lICsgIl06OmJlZm9yZSwgLnFsLXNub3cgLnFsLXBpY2tlci5xbC1mb250IC5xbC1waWNrZXItaXRlbVtkYXRhLXZhbHVlPSIgKyBmb250TmFtZSArICJdOjpiZWZvcmUgeyIgKyAiY29udGVudDogJyIgKyBmb250ICsgIic7IiArICJmb250LWZhbWlseTogJyIgKyBmb250ICsgIicsIHNhbnMtc2VyaWY7IiArICJ9IiArICIucWwtZm9udC0iICsgZm9udE5hbWUgKyAieyIgKyAiIGZvbnQtZmFtaWx5OiAnIiArIGZvbnQgKyAiJywgc2Fucy1zZXJpZjsiICsgIn0iOwp9KTsKdmFyIG5vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzdHlsZSIpOwpub2RlLmlubmVySFRNTCA9IGZvbnRTdHlsZXM7CmRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQobm9kZSk7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiU3VtbWVybm90ZSIsCiAgY29tcG9uZW50czogewogICAgcXVpbGxFZGl0b3I6IHF1aWxsRWRpdG9yCiAgfSwKICBwcm9wczogWyJzdW1ub3RlIl0sCiAgLy8gICBjcmVhdGVkKCkgewogIC8vICAgICAvLyB0aGlzLmdldHN1bSgpOwogIC8vICAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY29udGVudDogIiIsCiAgICAgIGVkaXRvck9wdGlvbjogewogICAgICAgIHBsYWNlaG9sZGVyOiAidHlwZSBzb21ldGhpbmcuLi4iLAogICAgICAgIG1vZHVsZXM6IHsKICAgICAgICAgIGltYWdlRWRpdDogewogICAgICAgICAgICBtb2R1bGVzOiBbIlJlc2l6ZSIsICJEaXNwbGF5U2l6ZSIsICJEZWxldGUiXQogICAgICAgICAgfSwKICAgICAgICAgIC8vIHNlZTogaHR0cHM6Ly9naXRodWIuY29tL05leHRCb3kvcXVpbGwtaW1hZ2UtZXh0ZW5kLW1vZHVsZSNxdWlsbC1pbWFnZS1leHRlbmQtbW9kdWxlLSVFNyU5QSU4NCVFNiU4OSU4MCVFNiU5QyU4OSVFNSU4RiVBRiVFOSU4NSU4RCVFNyVCRCVBRSVFOSVBMSVCOQogICAgICAgICAgSW1hZ2VFeHRlbmQ6IHsKICAgICAgICAgICAgbG9hZGluZzogdHJ1ZSwKICAgICAgICAgICAgbmFtZTogImltZyIsCiAgICAgICAgICAgIGFjdGlvbjogIi91cGxvYWRzIiwKICAgICAgICAgICAgLy8g5Y+v6YCJ5Y+C5pWwIOiuvue9ruivt+axguWktOmDqAogICAgICAgICAgICBoZWFkZXJzOiBmdW5jdGlvbiBoZWFkZXJzKHhocikgewogICAgICAgICAgICAgIHhoci5zZXRSZXF1ZXN0SGVhZGVyKCJ3aXRoQ3JlZGVudGlhbHMiLCB0cnVlKTsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgcmVzcG9uc2U6IGZ1bmN0aW9uIHJlc3BvbnNlKHJlcykgewogICAgICAgICAgICAgIHJldHVybiByZXMuaW5mbzsKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIC8vIHNlZTogaHR0cHM6Ly9xdWlsbGpzLmNvbS9kb2NzL21vZHVsZXMvdG9vbGJhci8KICAgICAgICAgIHRvb2xiYXI6IHsKICAgICAgICAgICAgY29udGFpbmVyOiBbW3sKICAgICAgICAgICAgICBzaXplOiBbIjEwcHgiLCAiMTJweCIsICIxNHB4IiwgIjE2cHgiLCAiMThweCIsICIyMHB4IiwgIjI0cHgiLCAiMzBweCIsICIzMnB4IiwgIjM2cHgiXQogICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgaGVhZGVyOiBbMSwgMiwgMywgNCwgNSwgNiwgZmFsc2VdCiAgICAgICAgICAgIH1dLCBbImJvbGQiLCAiaXRhbGljIiwgInVuZGVybGluZSIsICJzdHJpa2UiLCB7CiAgICAgICAgICAgICAgY29sb3I6IFtdCiAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBbXQogICAgICAgICAgICB9XSwgW3sKICAgICAgICAgICAgICBsaXN0OiAib3JkZXJlZCIKICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgIGxpc3Q6ICJidWxsZXQiCiAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICBpbmRlbnQ6ICItMSIKICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgIGluZGVudDogIisxIgogICAgICAgICAgICB9XSwgWyJsaW5rIiwgImltYWdlIl0sIFsiY2xlYW4iXSwgW3sKICAgICAgICAgICAgICBmb250OiBmb250cy53aGl0ZWxpc3QKICAgICAgICAgICAgfV1dLAogICAgICAgICAgICBoYW5kbGVyczogey8vIGltYWdlOiBmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAvLyAgIFF1aWxsV2F0Y2guZW1pdCh0aGlzLnF1aWxsLmlkKTsKICAgICAgICAgICAgICAvLyB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sCiAgICAgIG9uRWRpdG9yQmx1cjogZnVuY3Rpb24gb25FZGl0b3JCbHVyKCkge30sCiAgICAgIG9uRWRpdG9yRm9jdXM6IGZ1bmN0aW9uIG9uRWRpdG9yRm9jdXMoKSB7fSwKICAgICAgb25FZGl0b3JSZWFkeTogZnVuY3Rpb24gb25FZGl0b3JSZWFkeSgpIHt9CiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGVkaXRvcjogZnVuY3Rpb24gZWRpdG9yKCkgewogICAgICByZXR1cm4gdGhpcy4kcmVmcy5teVF1aWxsRWRpdG9yOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgYWRkdGV4dDogZnVuY3Rpb24gYWRkdGV4dCgpIHsKICAgICAgdmFyIG15dGV4dCA9IHRoaXMuc3Vtbm90ZTsKICAgICAgdGhpcy4kZW1pdCgidXBkYXRlLXRleHQiLCBteXRleHQpOwogICAgfQogIH0KfTs="},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;AACA;AACA;AACA;AACAA,+C,CACA;;AACA,uD,CACA;;AACAC,uBACA,MADA,EAEA,MAFA,EAGA,MAHA,EAIA,MAJA,EAKA,MALA,EAMA,MANA,EAOA,MAPA,EAQA,MARA,EASA,MATA,EAUA,MAVA;AAYAD;AACAA;;AACA;AACA;AACA,C,CACA;;;AACA,gBACA,OADA,EAEA,OAFA;AAIA;AAAA;AAAA;AACA;AACAE;AACAF,4B,CACA;;AACA;AACAG;AACA;AACAC,gBACA,6DACAC,QADA,GAEA,oEAFA,GAGAA,QAHA,GAIA,aAJA,GAKA,YALA,GAMAC,IANA,GAOA,IAPA,GAQA,gBARA,GASAA,IATA,GAUA,gBAVA,GAWA,GAXA,GAYA,WAZA,GAaAD,QAbA,GAcA,GAdA,GAeA,iBAfA,GAgBAC,IAhBA,GAiBA,gBAjBA,GAkBA,GAnBA;AAoBA,CAtBA;AAuBA;AACAC;AACAC;AACA;AACAC,oBADA;AAEAC;AACAC;AADA,GAFA;AAKAC,oBALA;AAMA;AACA;AACA;AACAC,MATA,kBASA;AACA;AACAC,iBADA;AAEAC;AACAC,wCADA;AAEAC;AACAC;AACAD;AADA,WADA;AAIA;AACAE;AACAC,yBADA;AAEAX,uBAFA;AAGAY,8BAHA;AAIA;AACAC;AACAC;AACA,aAPA;AAQAC;AACA;AACA;AAVA,WALA;AAiBA;AACAC;AACAC,wBACA,CACA;AACAC,qBACA,MADA,EAEA,MAFA,EAGA,MAHA,EAIA,MAJA,EAKA,MALA,EAMA,MANA,EAOA,MAPA,EAQA,MARA,EASA,MATA,EAUA,MAVA;AADA,aADA,EAeA;AAAAC;AAAA,aAfA,CADA,EAkBA,CACA,MADA,EAEA,QAFA,EAGA,WAHA,EAIA,QAJA,EAKA;AAAAC;AAAA,aALA,EAMA;AAAAC;AAAA,aANA,CAlBA,EA0BA,CACA;AAAAC;AAAA,aADA,EAEA;AAAAA;AAAA,aAFA,EAGA;AAAAC;AAAA,aAHA,EAIA;AAAAA;AAAA,aAJA,CA1BA,EAgCA,iBAhCA,EAiCA,SAjCA,EAkCA;AAAA1B;AAAA,cAlCA,CADA;AAqCA2B,uBACA;AACA;AACA;AAHA;AArCA;AAlBA;AAFA,OAFA;AAmEAC,kBAnEA,0BAmEA,EAnEA;AAoEAC,mBApEA,2BAoEA,EApEA;AAqEAC,mBArEA,2BAqEA;AArEA;AAuEA,GAjFA;AAkFAC;AACAC,UADA,oBACA;AACA;AACA;AAHA,GAlFA;AAuFAC;AACAC,WADA,qBACA;AACA;AACA;AACA;AAJA;AAvFA","names":["Quill","sizeStyle","fonts","fontList","fontStyles","fontName","font","node","document","name","components","quillEditor","props","data","content","editorOption","placeholder","modules","imageEdit","ImageExtend","loading","action","headers","xhr","response","toolbar","container","size","header","color","background","list","indent","handlers","onEditorBlur","onEditorFocus","onEditorReady","computed","editor","methods","addtext"],"sourceRoot":"src/views","sources":["Summernote.vue"],"sourcesContent":["<template>\r\n  <div class=\"hello\">\r\n    <div>\r\n      <quill-editor\r\n        v-model=\"sumnote\"\r\n        ref=\"myQuillEditor\"\r\n        :options=\"editorOption\"\r\n        @change=\"addtext\"\r\n        @blur=\"onEditorBlur($event)\"\r\n        @focus=\"onEditorFocus($event)\"\r\n        @ready=\"onEditorReady($event)\"\r\n      >\r\n      </quill-editor>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport \"quill/dist/quill.core.css\";\r\nimport \"quill/dist/quill.snow.css\";\r\nimport { quillEditor, Quill } from \"vue-quill-editor\";\r\nimport { ImageExtend } from \"quill-image-extend-module\";\r\nimport ImageEdit from \"quill-image-edit-module\";\r\nQuill.register(\"modules/imageEdit\", ImageEdit);\r\n// import ImageResize from 'quill-image-resize-module';\r\nconst sizeStyle = Quill.import(\"attributors/style/size\");\r\n// Quill.register('modules/ImageResize', ImageResize)\r\nsizeStyle.whitelist = [\r\n  \"10px\",\r\n  \"12px\",\r\n  \"14px\",\r\n  \"16px\",\r\n  \"18px\",\r\n  \"20px\",\r\n  \"24px\",\r\n  \"30px\",\r\n  \"32px\",\r\n  \"36px\",\r\n];\r\nQuill.register(sizeStyle, true);\r\nQuill.register(\"modules/ImageExtend\", ImageExtend);\r\nfunction getFontName(font) {\r\n  return font.toLowerCase().replace(/\\s/g, \"-\");\r\n}\r\n// Specify Quill fonts\r\nconst fontList = [\r\n  \"Arial\",  \r\n  \"Kanit\",\r\n];\r\nconst fontNames = fontList.map((font) => getFontName(font));\r\nconst fonts = Quill.import(\"formats/font\");\r\nfonts.whitelist = fontNames;\r\nQuill.register(fonts, true);\r\n// Add fonts to CSS style\r\nlet fontStyles = \"\";\r\nfontList.forEach(function (font) {\r\n  let fontName = getFontName(font);\r\n  fontStyles +=\r\n    \".ql-snow .ql-picker.ql-font .ql-picker-label[data-value=\" +\r\n    fontName +\r\n    \"]::before, .ql-snow .ql-picker.ql-font .ql-picker-item[data-value=\" +\r\n    fontName +\r\n    \"]::before {\" +\r\n    \"content: '\" +\r\n    font +\r\n    \"';\" +\r\n    \"font-family: '\" +\r\n    font +\r\n    \"', sans-serif;\" +\r\n    \"}\" +\r\n    \".ql-font-\" +\r\n    fontName +\r\n    \"{\" +\r\n    \" font-family: '\" +\r\n    font +\r\n    \"', sans-serif;\" +\r\n    \"}\";\r\n});\r\nconst node = document.createElement(\"style\");\r\nnode.innerHTML = fontStyles;\r\ndocument.body.appendChild(node);\r\nexport default {\r\n  name: \"Summernote\",\r\n  components: {\r\n    quillEditor,\r\n  },\r\n  props:[\"sumnote\"],\r\n  //   created() {\r\n  //     // this.getsum();\r\n  //   },\r\n  data() {\r\n    return {\r\n      content: \"\",\r\n      editorOption: {\r\n        placeholder: \"type something...\",\r\n        modules: {\r\n          imageEdit: {\r\n            modules: [\"Resize\", \"DisplaySize\", \"Delete\"],\r\n          },\r\n          // see: https://github.com/NextBoy/quill-image-extend-module#quill-image-extend-module-%E7%9A%84%E6%89%80%E6%9C%89%E5%8F%AF%E9%85%8D%E7%BD%AE%E9%A1%B9\r\n          ImageExtend: {\r\n            loading: true,\r\n            name: \"img\",\r\n            action: \"/uploads\",\r\n            // 可选参数 设置请求头部\r\n            headers: (xhr) => {\r\n              xhr.setRequestHeader(\"withCredentials\", true);\r\n            },\r\n            response: (res) => {\r\n              return res.info;\r\n            },\r\n          },\r\n          // see: https://quilljs.com/docs/modules/toolbar/\r\n          toolbar: {\r\n            container: [\r\n              [\r\n                {\r\n                  size: [\r\n                    \"10px\",\r\n                    \"12px\",\r\n                    \"14px\",\r\n                    \"16px\",\r\n                    \"18px\",\r\n                    \"20px\",\r\n                    \"24px\",\r\n                    \"30px\",\r\n                    \"32px\",\r\n                    \"36px\",\r\n                  ],\r\n                },\r\n                { header: [1, 2, 3, 4, 5, 6, false] },\r\n              ],\r\n              [\r\n                \"bold\",\r\n                \"italic\",\r\n                \"underline\",\r\n                \"strike\",\r\n                { color: [] },\r\n                { background: [] },\r\n              ],\r\n              [\r\n                { list: \"ordered\" },\r\n                { list: \"bullet\" },\r\n                { indent: \"-1\" },\r\n                { indent: \"+1\" },\r\n              ],\r\n              [\"link\", \"image\"],\r\n              [\"clean\"],\r\n              [{ font: fonts.whitelist }],\r\n            ],\r\n            handlers: {\r\n              // image: function() {\r\n              //   QuillWatch.emit(this.quill.id);\r\n              // }\r\n            },\r\n          },\r\n        },\r\n      },\r\n      onEditorBlur() {},\r\n      onEditorFocus() {},\r\n      onEditorReady() {},\r\n    };\r\n  },\r\n  computed: {\r\n    editor() {\r\n      return this.$refs.myQuillEditor;\r\n    },\r\n  },\r\n  methods: {\r\n    addtext() {\r\n      let mytext = this.sumnote;\r\n      this.$emit(\"update-text\", mytext);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n.note-editable{ \r\n    font-family: 'Kanit', sans-serif;\r\n    font-size: 15px !important; \r\n    text-align: left !important; \r\n    height: 350px !important;  \r\n}\r\nh3 {\r\n  margin: 40px 0 0;\r\n}\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\nli {\r\n  display: inline-block;\r\n  margin: 0 10px;\r\n}\r\na {\r\n  color: #42b983;\r\n}\r\n</style>\r\n\r\n<style>\r\n.ql-size span.ql-picker-item[data-value]::before,\r\n.ql-size span.ql-picker-label[data-value]::before {\r\n  content: attr(data-value) !important;\r\n}\r\n</style>"]}]}